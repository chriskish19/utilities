cmake_minimum_required(VERSION 3.18)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# BASIC WIN32 DX12 PROJECT SETUP
# Uncomment the block [[ to use
#[[
set(MSVC_compiler_id "MSVC")
set(CLANG_compiler_id "Clang")
set(GCC_compiler_id "GNU")

set(is_using_MSVC_compiler OFF)
set(is_using_CLANG_compiler OFF)
set(is_using_GCC_compiler OFF)

project(WIN32_DX12_EXAMPLE)

string(COMPARE EQUAL ${CMAKE_CXX_COMPILER_ID} ${MSVC_compiler_id} is_using_MSVC_compiler)
string(COMPARE EQUAL ${CMAKE_CXX_COMPILER_ID} ${CLANG_compiler_id} is_using_CLANG_compiler)
string(COMPARE EQUAL ${CMAKE_CXX_COMPILER_ID} ${GCC_compiler_id} is_using_GCC_compiler)

if(NOT (is_using_MSVC_compiler OR is_using_CLANG_compiler OR is_using_GCC_compiler))
    message(FATAL_ERROR "Compiler not supported, You are using: ${CMAKE_CXX_COMPILER_ID}")
endif()


add_definitions(-DUNICODE -D_UNICODE)
file(GLOB_RECURSE cpp_source_files "../cpp_source/*.cpp")
file(GLOB_RECURSE cpp_header_files "../cpp_headers/*.hpp")
include_directories("../cpp_headers")
include_directories("../resources")
add_executable(${PROJECT_NAME} WIN32 ${cpp_source_files} ${cpp_header_files})
target_link_libraries(${PROJECT_NAME} d3d12 dxgi d3dcompiler)
]]


